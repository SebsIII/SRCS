<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Allura&family=Oswald:wght@200..700&display=swap" rel="stylesheet">

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Allura&family=Oswald:wght@200..700&family=Questrial&display=swap" rel="stylesheet">

    <title>SRCS Dashboard</title>
</head>
<style>

body{
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    margin: 0px;
    color: white;
    background-color: #0B0B0B;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    font-family: Questrial;
}

main{
    width: 90vw;
    height: 85vh;
    background: linear-gradient(to right, rgba(166, 166, 166,0.7), rgba(255, 255, 255,0.7));
    border-radius: 16px;
    margin: 0px;
    box-sizing: border-box;
    padding: 16px;
}

header{
    margin: 0px;
    display: flex;
    width: 100vw;
    height: 7.5vh;
    position: absolute;
    top: 0px;
    display: flex;
    align-items: baseline;
    padding-left: 20vw;
}

#SRCS-title{
    font-size: 24px;
    font-family: Oswald;
    transition: all 0.3s;
}
#SRCS-title:hover{
    cursor: pointer;
    transform: scale(110%);
}

#SRCS-subtitle{
    font-size: 22px;
    font-family: Oswald;
    color: #9D4EDD;
    margin-left: 4px;
}

footer{
    margin: 0px;
    display: flex;
    width: 100vw;
    height: 7.5vh;
    position: absolute;
    bottom: 0px;
    display: flex;
    align-items:center;
    justify-content: right;
    padding-right: 15vw;
}

#signature{
    font-family: Allura;
    font-size: 26px;
    transition: all 0.3s;
}
#signature:hover{
    cursor: pointer;
    transform: scale(110%);
    color: #9D4EDD;
}

#main-title{
    margin: 8px 0px 0px 5%;
    font-size: 24px;
}

#weather-div{
    width: 20vw;
    height: 45vh;
    background-color: #9D4EDD;
    border-radius: 16px;
    position: absolute;
    right: 6.5vw;
    top: 10.5vh;
    box-sizing: border-box;
    padding: 16px;
    display: flex;
    flex-direction: column;
    align-items: center;
}

#align-antenna-btn{
    width: 15vw;
    height: 8vh;
    color: white;
    background-color: #9D4EDD;
    border: none;
    border-radius: 16px;
    font-family: Questrial;
    font-size: 20px;
    transition: all 0.3s;
    margin: 0px 16px 0px 0px;
}
#align-antenna-btn:hover{
    cursor: pointer;
    transform: scale(105%);
    filter: brightness(95%);
}

#setup-div{
    width: fit-content;
    height: 8vh;
    margin: 0px;
    position: absolute;
    bottom: 10vh;
    left: 6.5vw;    
    display: flex;
    align-items: center;
}

#status-div{
    background-color: white;
    width: 80%;
    height: 2vh;
    border-radius: 16px;
    position: absolute;
    right: 2vw;
    top: 90%;
}

.black{
    color: #0b0b0b;
}

#weather-title{
    font-size: 22px;
    margin: 4px;
}

#temperature-wrapper{
    margin: 16px 0px;
}

#temperature-var{
    font-size: 72px;
}

#humidity-wrapper{
    margin: 0px;
}

#humidity-var{
    font-size: 32px;
}

#GN-formatter{
    display: flex;
    margin: 32px;
}

.info-div{
    min-width: 15vw;
    height: fit-content;
    margin: 0px;
    font-size: 20px;
}

#general-title{
    margin: 8px;
    font-family: Oswald;
    font-size: 28px;
    color: #0B0B0B;
    transition: all 0.3s;
    width: fit-content;
}
#general-title:hover{
    cursor: pointer;
    transform: scale(115%);
    color: #e2c105;
}

#N2YO-title{
    margin: 8px;
    font-family: Oswald;
    font-size: 28px;
    color: #0B0B0B;
    transition: all 0.3s;
    width: fit-content;
}
#N2YO-title:hover{
    cursor: pointer;
    transform: scale(115%);
    color: #e2c105;
}

#weather-data-title{
    margin: 8px;
    font-family: Oswald;
    font-size: 28px;
    color: #0B0B0B;
    transition: all 0.3s;
    width: fit-content;
}
#weather-data-title:hover{
    cursor: pointer;
    transform: scale(115%);
    color: #e2c105;
}

.data{
    margin: 4px;
}

#SRCS-data-div{
    margin: 32px;
}


#SRCS-div-title{
    margin: 8px;
    font-family: Oswald;
    font-size: 28px;
    color: #0B0B0B;
    transition: all 0.3s;
    width: fit-content;
}
#SRCS-div-title:hover{
    cursor: pointer;
    transform: scale(115%);
    color: #e2c105;
}
</style>
<body>
    <header>
        <p id="SRCS-title" onclick="location.href='index.html'">SRCS</p>
        <p id="SRCS-subtitle">Dashboard</p>
    </header>
    <main>
        <p id="main-title">Reception tab</p>
        <div id="GN-formatter">
            <div id="general-data-div" class="info-div">
                <p id="general-title" onclick="getGeneral()">General</p>
                <p class="data">AA = <a id="AA-var">N/A</a></p>
                <p class="data">AD = <a id="AD-var">N/A</a></p>
                <p class="data">MApDR = <a id="MApDR-var">N/A</a></p>
                <p class="data">MRC = <a id="MRC-var">N/A</a></p>
            </div>
            <div id="N2YO-data-div" class="info-div">
                <p id="N2YO-title" onclick="updateN2YO()">N2YO</p>
                <p class="data">NORAD = <a id="NORAD-var">N/A</a></p>
                <p class="data">Passes = <a id="passes-var">N/A</a></p>
                <p class="data">startAz = <a id="startAz-var">N/A</a></p>
                <p class="data">maxAz = <a id="maxAz-var">N/A</a></p>
                <p class="data">endAz = <a id="endAz-var">N/A</a></p>
                <p class="data">sTime = <a id="sTime-var">N/A</a></p>
                <p class="data">eTime = <a id="eTime-var">N/A</a></p>
            </div>
            <div id="weather-data-div" class="info-div">
                <p id="weather-data-title" onclick="updateWeather()">Weather RAW</p>
                <p class="data">Light = <a id="light-RAW-var">N/A</a></p>
                <p class="data">Rain = <a id="rain-RAW-var">N/A</a></p>
                <p class="data">Wind = <a id="wind-RAW-var">N/A</a></p>
            </div>
            
            <div id="antenne-animation-div">
                <div id="antenna-icon"></div>
            </div>
        </div>
        <div id="SRCS-data-div" class="info-div">
            <p id="SRCS-div-title" onclick="getSRCS()">SRCS</p>
            <p class="data">POST = <a id="POST-var">N/A</a></p>
        </div>
        <div id="weather-div">
            <p id="weather-title">Current <a class="black">Weather</a></p>
            <p id="temperature-wrapper" class="black"><a id="temperature-var">N/A</a>CÂ°</p>
            <p id="humidity-wrapper"><a id="humidity-var">N/A</a>%</p>
            <p><a id="light-var">N/A</a>lx</p>
            <p class="black"><a id="wind-var">N/A</a>km/h</p>
            <p class="black" id="rain-var">N/A</p>
            <div id="status-div"></div>
        </div>
        <div id="setup-div">
            <button id="align-antenna-btn" onclick="alignAntennaTo0()">Align antenna to startAz</button>
            <p><a id="time-left">N/A</a> time left.</p>
        </div>
    </main>   
    <footer>
        <p id="signature" onclick="location.href='https://github.com/SebsIII'">By Sebs_</p>
    </footer>
    <script>
document.getElementById("time-left").innerText = "10:03"

const rain_var = document.getElementById("rain-var")

//RAW data
const light_RAW_var = document.getElementById("light-RAW-var")
const rain_RAW_var = document.getElementById("rain-RAW-var")
const wind_RAW_var = document.getElementById("wind-RAW-var")

//GENERAL data
const AA_var = document.getElementById("AA-var")
const AD_var = document.getElementById("AD-var")
const POST_var = document.getElementById("POST-var")

POST_var.innerText = "true"
AD_var.innerText = "counter-clockwise"

setInterval(function()
{
    getGeneral();
    getTemperature();
    getHumidity();
    getLight();
    getWind();
    getRain();
}, 2000);


function getTemperature()
{
    var SRCSRequest = new XMLHttpRequest();
    SRCSRequest.onreadystatechange = function()
    {
    if(this.readyState == 4 && this.status == 200 && this.responseText != null)
    {
        document.getElementById("temperature-var").innerHTML = this.responseText;
    }
    };
    SRCSRequest.open("GET", "readT", true);
    SRCSRequest.send();
}

function getHumidity()
{
    var SRCSRequest = new XMLHttpRequest();
    SRCSRequest.onreadystatechange = function()
    {
    if(this.readyState == 4 && this.status == 200 && this.responseText != null)
    {
        document.getElementById("humidity-var").innerHTML = this.responseText;
    }
    };
    SRCSRequest.open("GET", "readH", true);
    SRCSRequest.send();
}

function getLight(){
    var SRCSRequest = new XMLHttpRequest();
    SRCSRequest.onreadystatechange = function()
    {
    if(this.readyState == 4 && this.status == 200 && this.responseText != null)
    {
        light_RAW_var.innerHTML = this.responseText
        document.getElementById("light-var").innerHTML = this.responseText;
    }
    };
    SRCSRequest.open("GET", "readL", true);
    SRCSRequest.send();
}

function getRain(){
    var SRCSRequest = new XMLHttpRequest();
    SRCSRequest.onreadystatechange = function()
    {
    if(this.readyState == 4 && this.status == 200 && this.responseText != null)
    {
        rain_RAW_var.innerHTML = this.responseText
        let value = this.responseText, valueString
        rain_var.style.color = ""

        if (value >= 1020){
            valueString = "Clear sky";
        } else if(value >= 800 && value < 1020){
            valueString = "Some droplets";
        } else if(value >= 600 && value < 800){
            valueString = "It's raining";
        } else if(value >= 50 && value < 600){
            valueString = "Heavy raining";
        } else if(value >= 0 && value < 50){
            valueString = "Metal on sensor";
            rain_var.style.color = "red"
        }

        rain_var.innerHTML =  valueString;
    }
    };
    SRCSRequest.open("GET", "readR", true);
    SRCSRequest.send();
}

function getWind(){
    var SRCSRequest = new XMLHttpRequest();
    SRCSRequest.onreadystatechange = function()
    {
    if(this.readyState == 4 && this.status == 200 && this.responseText != null)
    {
        wind_RAW_var.innerHTML = this.responseText
        document.getElementById("wind-var").innerHTML = this.responseText;
    }
    };
    SRCSRequest.open("GET", "readW", true);
    SRCSRequest.send();
}

function getSRCS(){
    var SRCSRequest = new XMLHttpRequest();
    SRCSRequest.onreadystatechange = function()
    {
    if(this.readyState == 4 && this.status == 200 && this.responseText != null)
    {
        document.getElementById("POST-var").innerHTML = this.responseText;
    }
    };
    SRCSRequest.open("GET", "readSRCS", true);
    SRCSRequest.send();
}

function getGeneral(){
    var SRCSRequest = new XMLHttpRequest();
    SRCSRequest.onreadystatechange = function()
    {
    if(this.readyState == 4 && this.status == 200 && this.responseText != null)
    {
        AA_var.innerHTML = this.responseText
    }
    };
    SRCSRequest.open("GET", "readGENERAL", true);
    SRCSRequest.send();
}

function updateN2YO(){
    //fetch from n2yo api
    console.log("wait a sec, not done yet")
    return
}
function alignAntennaTo0(){
    var SRCSRequest = new XMLHttpRequest();
    SRCSRequest.onreadystatechange = function()
    {
    if(this.readyState == 4 && this.status == 200 && this.responseText != null)
    {
        console.log("Antenna-align-to-0 sent and received.")
    }
    };
    SRCSRequest.open("GET", "alignAntennaTo0", true); // add formatting of url
    SRCSRequest.send();
}
    </script>
</html>